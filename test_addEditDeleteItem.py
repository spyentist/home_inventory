# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestAddEditDeleteItem():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_addEditDeleteItem(self):
    # Test name: Add Edit Delete Item
    # Step # | name | target | value
    # 1 | setWindowSize | 1616x916 | 
    self.driver.set_window_size(1616, 916)
    # 2 | click | linkText=Home | 
    self.driver.find_element(By.LINK_TEXT, "Home").click()
    # 3 | click | id=adaptiveSubMenu | 
    self.driver.find_element(By.ID, "adaptiveSubMenu").click()
    # 4 | click | linkText=Items | 
    self.driver.find_element(By.LINK_TEXT, "Items").click()
    # 5 | click | id=id_name | 
    self.driver.find_element(By.ID, "id_name").click()
    # 6 | type | id=id_name | Test Item Selenium
    self.driver.find_element(By.ID, "id_name").send_keys("Test Item Selenium")
    # 7 | click | css=.submitbutton | 
    self.driver.find_element(By.CSS_SELECTOR, ".submitbutton").click()
    # 8 | click | id=myInput | 
    self.driver.find_element(By.ID, "myInput").click()
    # 9 | type | id=myInput | Test Item Selenium
    self.driver.find_element(By.ID, "myInput").send_keys("Test Item Selenium")
  
